version: "3.8"
services:
  caddy:
    image: alftirta/proxy-caddy:1.0.1
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "3000:3000"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  front-end:
    build:
      context: ./front-end
      dockerfile: ./front-end.dockerfile
    restart: always
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - BROKER_URL=http://localhost:3000
  
  broker-service:
    build:
      context: ./back-end/broker-service
      dockerfile: ./broker-service.dockerfile
    restart: always
    ports:
      - "3000:3000"
    deploy:
      mode: replicated
      replicas: 1
  
  authentication-service:
    build:
      context: ./back-end/authentication-service
      dockerfile: ./authentication-service.dockerfile
    restart: always
    ports:
      - "3001:3001"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgresql port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  
  logger-service:
    build:
      context: ./back-end/logger-service
      dockerfile: ./logger-service.dockerfile
    restart: always
    ports:
      - "3002:3002"
    deploy:
      mode: replicated
      replicas: 1
  
  mail-service:
    build:
      context: ./back-end/mail-service
      dockerfile: ./mail-service.dockerfile
    restart: always
    ports:
      - "3003:3003"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_PORT: 1025
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROM_NAME: "John Smith"
      MAIL_FROM_ADDRESS: "john.smith@example.com"
  
  listener-service:
    build:
      context: ./back-end/listener-service
      dockerfile: ./listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1

  postgresql:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgresql:/var/lib/postgresql/data
  
  mongodb:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongodb:/data/db
  
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
  
  rabbitmq:
    image: 'rabbitmq:latest'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq:/var/lib/rabbitmq
