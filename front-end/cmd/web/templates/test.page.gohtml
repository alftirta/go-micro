{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <a id="brokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Broker</a>
                <a id="authBrokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Auth</a>
                <a id="logBrokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Log</a>
                <a id="logBrokerGRPCBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Log via gRPC</a>
                <a id="mailBrokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Mail</a>
                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        const brokerBtn = document.getElementById("brokerBtn");
        const authBrokerBtn = document.getElementById("authBrokerBtn");
        const logBrokerBtn = document.getElementById("logBrokerBtn");
        const logBrokerGRPCBtn = document.getElementById("logBrokerGRPCBtn");
        const mailBrokerBtn = document.getElementById("mailBrokerBtn");
        const output = document.getElementById("output");
        const sent = document.getElementById("payload");
        const received = document.getElementById("received");
        const brokerURL = {{.BrokerURL}};

        brokerBtn.addEventListener("click", () => {
            fetch(brokerURL, {method: "POST"})
                .then(response => response.json())
                .then(data => {
                    sent.innerHTML = "empty post request";
                    received.innerHTML = JSON.stringify(data, undefined, 4);
                    if (data.error) {
                        console.log(data.message);
                    } else {
                        output.innerHTML += `<br><strong>Response from the broker service</strong>: ${data.message}`;
                    }
                })
                .catch(error => output.innerHTML += `<br>${error}`)
        });

        authBrokerBtn.addEventListener("click", () => {
            const payload = {
                action: "auth",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret",
                },
            };

            const headers = new Headers();
            headers.append("Content-Type", "application/json");

            const body = {
                method: "POST",
                body: JSON.stringify(payload),
                headers: headers,
            };

            fetch(`${brokerURL}/handle`, {
                method: "POST",
                body: JSON.stringify(payload),
                headers,
            })
                .then(response => response.json())
                .then(data => {
                    sent.innerHTML = JSON.stringify(payload, undefined, 4);
                    received.innerHTML = JSON.stringify(data, undefined, 4);
                    if (data.error) {
                        output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
                    } else {
                        output.innerHTML += `<br><strong>Response from the broker service</strong>: ${data.message}`;
                    }
                })
                .catch(error => output.innerHTML += `<br>${error}`)
        });

        logBrokerBtn.addEventListener("click", () => {
            const payload = {
                action: "log",
                log: {
                    name: "event",
                    data: "Some kind of data",
                },
            };

            const headers = new Headers();
            headers.append("Content-Type", "application/json");

            fetch(`${brokerURL}/handle`, {
                method: "POST",
                body: JSON.stringify(payload),
                headers,
            })
                .then(response => response.json())
                .then(data => {
                    sent.innerHTML = JSON.stringify(payload, undefined, 4);
                    received.innerHTML = JSON.stringify(data, undefined, 4);
                    if (data.error) {
                        output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
                    } else {
                        output.innerHTML += `<br><strong>Response from the broker service</strong>: ${data.message}`;
                    }
                })
                .catch(error => output.innerHTML += `<br>${error}`)
        });

        logBrokerGRPCBtn.addEventListener("click", () => {
            const payload = {
                action: "log",
                log: {
                    name: "event",
                    data: "Some kind of gRPC data",
                },
            };

            const headers = new Headers();
            headers.append("Content-Type", "application/json");

            fetch(`${brokerURL}/log-grpc`, {
                method: "POST",
                body: JSON.stringify(payload),
                headers,
            })
                .then(response => response.json())
                .then(data => {
                    sent.innerHTML = JSON.stringify(payload, undefined, 4);
                    received.innerHTML = JSON.stringify(data, undefined, 4);
                    if (data.error) {
                        output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
                    } else {
                        output.innerHTML += `<br><strong>Response from the broker service</strong>: ${data.message}`;
                    }
                })
                .catch(error => output.innerHTML += `<br>${error}`)
        });

        mailBrokerBtn.addEventListener("click", () => {
            const payload = {
                action: "mail",
                mail: {
                    from: "me@example.com",
                    to: "you@there.com",
                    subject: "Test Email",
                    message: "Hello, World!",
                },
            };

            const headers = new Headers();
            headers.append("Content-Type", "applciation/json");

            fetch(`${brokerURL}/handle`, {
                method: "POST",
                body: JSON.stringify(payload),
                headers,
            })
                .then(response => response.json())
                .then(data => {
                    sent.innerHTML = JSON.stringify(payload, undefined, 4);
                    received.innerHTML = JSON.stringify(data, undefined, 4);
                    if (data.error) {
                        output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
                    } else {
                        output.innerHTML += `<br><strong>Response from the broker service</strong>: ${data.message}`;
                    }
                })
                .catch(error => output.innerHTML += `<br>${error}`)
        });
    </script>
{{end}}
